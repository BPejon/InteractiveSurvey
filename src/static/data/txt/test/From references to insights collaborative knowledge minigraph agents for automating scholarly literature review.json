{
    "title": "From References to Insights: Collaborative Knowledge Minigraph Agents for Automating Scholarly Literature Review",
    "authors": "Zhi Zhang 1 , Yan Liu , Sheng-hua Zhong 2 , Gong Chen 1 , Yu Yang 1 , Jiannong Cao 1\n\n1 The Hong Kong Polytechnic University 2 Shenzhen University zhi271.zhang@connect.polyu.hk, yan.liu@polyu.edu.hk, csshzhong@szu.edu.cn, csgchen@comp.polyu.edu.hk, cs-yu.yang@polyu.edu.hk, jiannong.cao@polyu.edu.hk",
    "abstract": "Literature reviews play a crucial role in scientific research for understanding the current state of research, identifying gaps, and guiding future studies on specific topics. However, the process of conducting a comprehensive literature review is yet time-consuming. This paper proposes a novel framework, collaborative knowledge minigraph agents (CKMAs) 1 , to automate scholarly literature reviews. A novel promptbased algorithm, the knowledge minigraph construction agent (KMCA), is designed to identify relationships between information pieces from academic literature and automatically constructs knowledge minigraphs. By leveraging the capabilities of large language models on constructed knowledge minigraphs, the multiple path summarization agent (MPSA) efficiently organizes information pieces and relationships from different viewpoints to generate literature review paragraphs. We evaluate CKMAs on three benchmark datasets. Experimental results demonstrate that the proposed techniques generate informative, complete, consistent, and insightful summaries for different research problems, promoting the use of LLMs in more professional fields.",
    "introduction": "N/A",
    "main_content": "From References to Insights: Collaborative Knowledge Minigraph Agents for Automating Scholarly Literature Review\n\nZhi Zhang 1 , Yan Liu , Sheng-hua Zhong 2 , Gong Chen 1 , Yu Yang 1 , Jiannong Cao 1\n\n1 The Hong Kong Polytechnic University 2 Shenzhen University zhi271.zhang@connect.polyu.hk, yan.liu@polyu.edu.hk, csshzhong@szu.edu.cn, csgchen@comp.polyu.edu.hk, cs-yu.yang@polyu.edu.hk, jiannong.cao@polyu.edu.hk\n\nAbstract\n\nLiterature reviews play a crucial role in scientific research for understanding the current state of research, identifying gaps, and guiding future studies on specific topics. However, the process of conducting a comprehensive literature review is yet time-consuming. This paper proposes a novel framework, collaborative knowledge minigraph agents (CKMAs) 1 , to automate scholarly literature reviews. A novel promptbased algorithm, the knowledge minigraph construction agent (KMCA), is designed to identify relationships between information pieces from academic literature and automatically constructs knowledge minigraphs. By leveraging the capabilities of large language models on constructed knowledge minigraphs, the multiple path summarization agent (MPSA) efficiently organizes information pieces and relationships from different viewpoints to generate literature review paragraphs. We evaluate CKMAs on three benchmark datasets. Experimental results demonstrate that the proposed techniques generate informative, complete, consistent, and insightful summaries for different research problems, promoting the use of LLMs in more professional fields.\n\nFigure 1: Illustration of relationships between information pieces in scientific papers. Capturing these relationships is essential for composing a coherent story in literature reviews.\n\nIntroduction\n\nArtificial intelligence (AI) is being increasingly integrated into scientific discovery to augment and accelerate scientific research (Wang et al. 2023). Researchers are developing AI methods to, e.g., literature understanding, experiment development, and manuscript draft writing (Liu et al. 2022; Wang et al. 2024; Martin-Boyle et al. 2024).\n\nLiterature reviews play a crucial role in scientific research, assessing and integrating previous research on specific topics (Bolanos et al. 2024). They aim to meticulously identify and appraise all relevant literature related to a specific research question. Recent advancements in AI have shown promising performance in understanding research papers and generating human-like text (Van Dinter, Tekinerdogan, and Catal 2021). By leveraging AI capabilities, automatic literature review models enable researchers to save time and effort in the manual process of conducting literature reviews, rapidly identify key trends and gaps in recent research outputs, and uncover insights that might be overlooked in manual reviews (Wagner, Lukyanenko, and Par´ e 2022).\n\nThe automatic literature review models typically involve two stages (Shi et al. 2023): (1) selecting relevant reference papers and (2) determining logical relationships to compose a summary that presents the evolution of a specific field (these stages can be applied iteratively). Multiple scientific document summarization (MSDS), aiming to generate coherent and concise summaries for clusters of topic relevant scientific papers, is the representative work in the second stage. Past decades (Jin, Wang, and Wan 2020) have witnessed the development of summarization methods. Extractive methods directly select important sentences from original papers. Abstractive methods can generate new words and sentences but are technically more challenging than extractive methods.\n\nRecently, large language models (LLMs), pre-trained on extensive text data, have transformed abstractive summarization and show human-like performance in understanding and coherent language synthesis. However, ideas arising in research papers often have complex relationships, e.g., conflicting or duplicate. Without explicit instructions, LLMs fall short in capturing the relations between ideas and composing a story that connects related work reflecting the author’s understanding of their field (Li and Ouyang 2024). As shown in Fig 1, effective summarization often involves the ability to understand concepts of materials, methods, and tasks in referencing papers, aggregate complementary ideas (e.g., M 1 is used for T ) while contrasting differences (e.g., M 2 is additionally used for B compared with A ).\n\nTo tackle this bottleneck, we propose equipping LLMs with structural knowledge. Different from knowledge graphs, which consist of entities as nodes and their relationships as edges, serving as general-purpose knowledge, we introduce knowledge minigraphs. Knowledge minigraphs are small-scale semantic graphs, comprising research-relevant concepts as nodes and their relationships as edges, specially designed to capture the structural information between ideas in references.\n\nTo automatically construct knowledge minigraphs, we propose a prompt-based algorithm, the knowledge minigraph construction agent (KMCA) to elicit LLMs to identify research-relevant concepts and relationships based on references. Benefiting from the designed iterative construction strategy, key information and relationships are itera- tively extracted and stored from numerous references into minigraphs.\n\nBy leveraging the capabilities of LLMs on knowledge minigraphs, the multiple path summarization agent (MPSA) is designed to organize the generated literature review. The MPSA samples multiple summaries from different viewpoints and logical paths in the knowledge minigraph, utilizing the mixture of experts technique. A self-evaluation mechanism is then employed to automatically route to the most desirable summary as the final output.\n\nRelated Work\n\nGraphs in MSDS Tasks\n\nTo generate a summary that is representative of the overall content, graph-based methods construct external graphs to assist document representation and cross-document relation modeling, achieving promising progress. In this regard, LexRank (Erkan and Radev 2004) and TextRank (Mihalcea and Tarau 2004) first introduced graphs to extractive text summarization in 2004. They compute sentence importance using a graph representation of sentences to extract salient textual units from documents as summarization.In 2020, Wang et al. (Wang et al. 2020) propose to extract salient textual units from documents as summarization using a heterogeneous graph consisting of semantic nodes at several granularity levels of documents. In 2022, Wang et al. (Wang et al. 2022) incorporate knowledge graphs into document encoding and decoding, generating the summary from a knowledge graph template to achieve state-of-the-art performance.\n\nHowever, to the best of our knowledge, no existing work integrates LLMs into graph-based methods to leverage their natural language understanding capabilities for improved graph construction and summary generation.\n\nPre-trained Language Models in MSDS Tasks\n\nIn recent years, pre-trained language models (PLMs) have demonstrated promising results in multiple document summarization. Liu et al. (Liu and Lapata 2019) propose finetuning a pre-trained BERT model as the encoder and a randomly initialized decoder to enhance the quality of generated summaries. Building upon BART (Lewis et al. 2020), Beltagy et al. (Beltagy, Peters, and Cohan 2020) propose LED for lengthy text summarization, which is directly initialized from bart-large but employs global-local attention to better handle long context inputs. Xiao et al. (Xiao et al. 2022) introduce PRIMERA, a pre-trained encoder-decoder multi-document summarization model, by improving aggregating information across documents. More recently, pretrained large language models (LLMs) show promising generation adaptability by training billions of model parameters on massive amounts of text data (Zhao et al. 2023; Minaee et al. 2024). Zhang et al. (Zhang et al. 2024a) utilize welldesigned instructions to extract key elements, arrange key information, and generate summaries. Zakkas et al. (Zakkas, Verberne, and Zavrel 2024) propose a three-step approach to select papers, perform single-document summarization, and aggregate results.\n\nPLMs can provide fluent summary results for referencing papers. However, they fall short in capturing the relations between ideas from multiple related papers.\n\nMethod\n\nFig. 2 illustrates the architecture of the proposed collaborative knowledge minigraph agents (CKMAs). CKMAs consists of two key components: the knowledge minigraph construction agent and the multiple path summarization agent.\n\nKnowledge Minigraph Construction Agent\n\nIn this module, we are given T reference documents { C 1 , . . . , C t } ’s abstracts. We aim to construct a knowledge structure O that captures the relationships between concepts in the referenced papers.\n\nPast decades have witnessed knowledge graphs become the basis of information systems that require access to structured knowledge (Zou 2020). Knowledge structures are represented as semantic graphs, where nodes denote entities and are connected by relations denoted by edges. However, the general-purpose knowledge graphs are unsuitable for scientific document summarization, as they do not necessarily involve the main ideas of research papers and are not suitable for identifying gaps not addressed by prior work. Thus, in this paper, we propose establishing a knowledge minigraph, defined as as a small set of research-relevant concepts and their relationships. The construction steps of the knowledge minigraph are as follows:\n\nReference chunking Given a total of T reference documents, we first divide them into I chunks, each containing at most k reference documents. Here, { C 1 i , . . . C k i } represents the k reference papers in the i -th chunk. MSDS usually involves numerous reference papers, forming a long context. LLMs either fail to process the entire context exceeding the acceptable length or suffer from missing crucial information positioned amidst a lengthy context (Zhang et al. 2024b). Thus, we chunk related works and use LLMs to construct the knowledge structure step by step with k reference papers each time.\n\nFigure 2: The overall architecture of the proposed collaborative knowledge minigraph agents (CKMAs).\n\nMinigraph generation We employ a knowledge minigraph prompt G ( { C 1 i , . . . C k i } ) to construct the knowledge structure of interest based on the abstracts of referenced papers { C 1 i , . . . C k i } . It is known that constructing knowledge graphs from raw text data requires entity recognition and relation extraction (Trajanoska, Stojanov, and Trajanov 2023). Tailoring recent advancements in prompt techniques, we design instructions for the integration of LLM into these tasks within a single round of dialogue (using the prompt for query and LLMs for response). As shown in Table 1, the prompt involves three special designs:\n\n(1) Output Constraint: LLMs are well known for being relatively verbose and free-form in their output, making it hard for automated graph construction programs (Tan and Motani 2023). Thus, we prompt LLM to constrain output in a machine-understandable JSON format. (2) Scientific Constraints: To ensure the constructed knowledge structure revolves around the main idea of research topics, we design constraints on entities of interest and relationships of interest. Inspired by DYGIE++ (Wadden et al. 2019), we extract entities classified in six types, Task, Method, Metric, Material, Generic, and OtherScientificTerm, and relations are in seven types, Compare, Used-for, Feature-of, Hyponymof, Evaluate-for, Part-of, and Conjunction. (3) Volume Constraints: Redundant relationships will lead to length issues. To ensure the constructed knowledge structure is concise and informative, we constrain the focus to the topm significant relationships.\n\nMinigraph transformation To enable LLMs to understand the derived knowledge minigraph, we design a function R ( O ) to transform the knowledge minigraph O into a text representation for subsequent processing. In detail, available relationships whose type meet the constraints are transformed into a line of text in the format head p − rel p → tail p , where head p and tail p are the head and tail entities, and rel p is the relationship.\n\nFinally, iteratively employing these three steps, the knowledge structure O i is constructed as shown in Eq. 1.\n\nIn the first iteration, we apply the knowledge minigraph prompt G to the first chunk of reference papers to derive the initial knowledge minigraph O 1 . For subsequent iterations, we transform the intermediate knowledge minigraph O i − 1 into a text representation R ( O i − 1 ) . This text representation is then input along with the C 1 i , . . . C k i , allowing for dynamic updates to the knowl i -th chunk of reference papers edge minigraph.\n\nMultiple Path Summarization Agent\n\nIn this module, we are given the knowledge structure O , the referencing paper’s abstract A , and the chunked referencing papers { C 1 i , . . . C k i } ’s abstracts. We aim to generate a summary following the knowledge structure.\n\nEven given O as guidance, generating a summary remains an ill-posed problem, i.e., the solution is not unique and depends on the specific discussion viewpoints. For example, one can highlight different concepts or choose different writing logic for different situations. Can we harness different understandings of the knowledge structure to create a more capable summary? Inspired by the mixture of experts approach (Shazeer et al. 2017), a machine learning technique to leverage diverse model capabilities where multiple expert networks specialize in different skill sets, we propose using LLMs with different hinted paths to understand the knowledge minigraph for generating multiple summaries and selecting the best viewpoint. The steps of the multiple path summarization agent are as follows:\n\nChunk summarization As mentioned before, MSDS usually involves numerous reference papers, forming a long context problem. We chunk them into I chunks and formulate a hierarchical summarization process, first generating summaries for each chunk of referenced papers. With prompt engineering, we elicit the behavior of LLMs to generate summaries for each chunk under the guidance of derived knowledge minigraphs O . As illustrated in Table 1, we instruct LLMs to take into consideration three kinds of information: the scientific article’s abstract A , summaries of referenced paper { C 1 i , . . . C k i } , and the knowledge minigraphs of referenced paper O . After understanding this information, the LLM is tasked with writing a summary for each chunk, where A and { C 1 i , . . . C k i } provide textual details locally and O provide structural knowledge globally. Flexible to customize other instruction details, such as specifying writing style in real-world applications, the default instructions follow the prompts designed by Zakkas et al. (Zakkas, Verberne, and Zavrel 2024) for fair comparison. Mathematically, the chunk summarization can be denoted as:\n\nTable 1: Prompts in the knowledge minigraph construction agent and the multiple path summarization agent.\n\nwhere S is the prompt function for chunk summarization.\n\nPath-aware summarization We employ E experts to merge all chunk summaries { M i } and generate final summaries, with each expert aware of different hinted paths to understand the knowledge minigraph. Given consistent knowledge, different human researchers may have varying understandings, selectively emphasizing concepts in a logical order. To automatically mimic human researchers and generate summaries of different understanding, we leverage the observation that LLMs are sensitive to prompt wording and their order (Pezeshkpour and Hruschka 2023). We find that the order of given referencing papers impacts the generated summary, affecting the order of introducing information from references and the highlighting of concepts. Thus, we propose sampling E permutations from the full permutations of referenced papers to serve as the order of input in the instructions as a hint of the potential logical path in knowledge minigraph, which are then used to prompt the LLM to generate summaries. We use the same prompt as in chunk summarization, except that summaries of referenced papers C 1 i , . . . C k i are replaced by a permutation of chunk summaries M i . Mathematically, the summaries generated by the e -th expert can be denoted as:\n\nwhere S ( e ) represents the prompt function for the e -th expert with the sampled e -th permutation of referencing papers. For instance, given chunk summarizations { M 1 , M 2 , M 3 } , where M 1 , M 2 , and M 3 are summaries of the first, second, and third chunks of referencing papers, respectively, three experts can be fed [ M 1 , M 2 , M 3 ] , [ M 2 , M 1 , M 3 ] , and [ M 3 , M 2 , M 1 ] as input. The remaining parts of the instructions remain consistent with S .\n\nSummarization router We design a router to evaluate different experts’ summaries and automatically select the most desirable summary Y ( e ) as the final output. Without requiring additional side information, this paper proposes a self-evaluation strategy. In detail, we observe that there are agreements between the experts’ viewpoints and their generated summaries. We propose to quantify the degree of agreement for each summary using the ROUGE-1 score (Lin 2004), which measures the overlap between a generated summary and other summaries. We then select the summary with the highest degree of agreement, which indicates that its understanding has the highest likelihood of being supported by other experts, or in other words, is relatively more acceptable. Mathematically, the final summary can be denoted as:\n\nwhere rouge1( Y ( e ) , Y ( j ) ) is the an 1-gram recall (ROUGE-1 score) between e -expert’s generated summary Y ( e ) and j - expert’s generated summary Y ( j ) .\n\nTable 2: Comparasion of CKMAs with state-of-the-art methods on Multi-Xscience, TAS2, and TAD datasets.\n\nExperiments\n\nWe evaluate our method on three public MSDS datasets: Multi-Xscience (Lu, Dong, and Charlin 2020), TAD (Chen et al. 2022), and TAS2 (Chen et al. 2022). Multi-Xscience is the first large-scale and open MDSS dataset, collected from arXiv and the Microsoft Academic Graph (MAG). It contains 5,093 instances for testing, primarily focusing on the computer science field. TAD and TAS2 are collected from the public scholar corpora S2ORC and Delve, respectively. While TAD contains papers from multiple fields, TAS2 focuses on the computer science field. Both TAD and TAS2 contain 5,000 instances for testing. The input and output format of the three datasets are consistent: each instance contains the abstract of a query paper and the abstracts of reference papers it cites as input, with a paragraph from the related work section of the query paper serving as the gold summary.\n\nFor a fair comparison, we follow relevant studies (Zakkas, Verberne, and Zavrel 2024) of prompt-based methods to use the same LLM, gpt-3.5-turbo, as the backbone model. We set the temperature of the sampling to 0.0 for reproducibility. We set the chunk size k to 3 and the number of experts E to 3. We set the volume constraint m to 32. Following previous work, we automatically evaluate the summarization quality using ROUGE scores (Lin 2004). We employ ROUGE-N to calculate the N-grams overlap between the output and gold summary, assessing the summary informativeness:\n\nwhere X denotes a reference summary sampled from the reference summary collection U , n represents the length of the n -gram, C( . ) is the count of the n -gram, and C match ( . )\n\nis the maximum number of n -grams co-occurring in a candidate summary and a set of reference summaries. We report unigram and bigram co-occurrence (ROUGE-1 and ROUGE-2).\n\nComparasion Experiments\n\nTable 2 compares the proposed model with graph-based methods including LexRank (Erkan and Radev 2004), TextRank (Mihalcea and Tarau 2004), HeterSumGraph (Wang et al. 2020), GraphSum (Li et al. 2020), TAG (Chen et al. 2022), and KGSum (Wang et al. 2022) and pre-trained language model-based methods, including Pointer-Generator (See, Liu, and Manning 2017), BertABS (Liu and Lapata 2019), SciBertABS (Beltagy, Lo, and Cohan 2019), HiMAP (Fabbri et al. 2019), BART (Lewis et al. 2020), MGSum (Jin, Wang, and Wan 2020), PRIMERA (Xiao et al. 2022), GPT-3.5-turbo (Ouyang et al. 2022), and GPT-4 (Achiam et al. 2023). The proposed CKMAs achieves state-of-theart performance on all three datasets in terms of ROUGE-1 and ROUGE-2 scores. CKMAs also outperforms the latest prompt-powered MSDS, e.g., 3A-COT (Zhang et al. 2024a) and SumBlogger (Zakkas, Verberne, and Zavrel 2024).\n\nAblation Studies\n\nThis section presents ablation studies to investigate the performance gains brought by the designed modules in CKMAs. We first ablate the knowledge minigraph construction agent (KMCA) and the multiple path summarization agent (MPSA), respectively. When ablating KMCA, we no longer construct the knowledge minigraph and do not include it as part of the MPSA instruction. When removing MPSA, we use the instruction in Table 1 to directly generate a single summary as the final summary. We report the performance\n\nTable 3: Ablation study of the proposed collaborative knowledge minigraph agents (CKMAs) on the Multi-Xscience dataset.\n\nFigure 3: ROUGE score comparison of the proposed CKMAs with its backbone models (vanilla GPT-3.5-turbo) group by reference paper number on the Multi-Xscience dataset.\n\nof the ablated version of the model in the first line of Table 3.\n\nThen, we ablate the modules in MPSA and KMCA. For the knowledge minigraph construction agent, when ablating the scientific constraint or volume constraint ablation in minigraph generation, we remove the corresponding instruction in Table 1. To ablate iterative construction, we remove Eq. 1 and directly use all references as input. Due to the length issue, the over-length context is truncated. For the multiple path summarization agent, when ablating chunk summarization, we directly use all references’ abstracts as input. To ablate the path-aware summarization strategy, we use the references with original order as input, adjusting temperatures from 0.0 to 0.7. When removing the summarization router, we randomly select a generated summary.\n\nTable 3 shows the results of ablation studies, with the full version of the proposed model reported in the last line. We find that removing any module leads to performance degradation. This indicates that all designs contribute to the final performance. The MPSA brings a 4% performance gain, and KMCA brings a 2% performance gain. For designs in the knowledge minigraph construction agent, the performance gain brought by iterative construction is the largest, indicating its effectiveness in understanding long contexts. For designs in the multiple path summarization agent, the performance gain brought by the summarization router is the largest, indicating the importance of selecting the most desirable summaries from different logical paths.\n\nCase Studies\n\nThis section conducts case studies to provide further insights into our model’s performance. We first perform statistical analysis to validate in which cases the model succeeds and in which it fails. We group the test samples based on the number of references contained in the gold summary. In every group, we calculate the average ROUGE-L scores for CKMAs and its backbone model (vanilla GPT-3.5-turbo), comparing generated summaries with gold summaries. The results are presented in Fig. 3. We observe that CKMAs consistently outperforms vanilla GPT-3.5-turbo regardless of the number of referencing papers. As the number of reference papers increases, the performance gap between CKMAs and vanilla GPT-3.5-turbo widens. CKMAs demonstrates the capability to model complex relationships within long context, even achieving better results due to more references benefiting the understanding of the research, in contrast to the performance decrease observed in vanilla GPT3.5-turbo.\n\nFor a detailed comparison, we sample an instance from the Multi-Xscience dataset and use well-known LLMs, GPT-3.5-turbo and GPT 4.0, to generate summaries with the default requirements listed in Table 1. The generated results are shown in Table 4. We find that GPT-3.5-turbo suffers from information loss, omitting citation 13. GPT 4.0 shows improvement but lists facts in parallel without logical connections. For example, citations 37 and 14 are listed side by side, but show no parallel logical relationship. It can even lead to hallucination problems, as no evidence shows citation 16 is a statistical method, while citation 16 and cita- tions 3, 6, 5 are all categorized as statistical methods. We then use different versions of the proposed CKMAs to generate a summary. It can be observed that without the knowledge minigraph construction agent (KMCA), the multiple path summarization agent (MPSA) contributes to highlighting different categories of algorithms from the desired viewpoint. Without MPSA, the KMCA contributes to organizing algorithms logically, e.g., from probabilistic to statistical approaches, and then to example-based learning methods. With both modules, CKMAs generates the best summary, categorizing algorithms as supervised learning as in the gold summary and detailing subcategories in a logical order.\n\nTable 4: Case study of the proposed collaborative knowledge minigraph agents (CKMAs) on the Multi-Xscience dataset.\n\nWe then analyze the differences between queried public knowledge graphs and the constructed knowledge minigraphs. We sample an instance from the Multi-Xscience dataset for this comparison. To query the knowledge graph, we use SPARQL to access Wikidata, a collaborative knowledge base. The queried knowledge graph is shown in the upper part of Fig. 4. For the knowledge minigraph, we employ the proposed method with knowledge minigraph construction, with the result displayed in the lower part. We observe that the entities in the queried knowledge graph are generalpurpose and lack specific insights into research problems. The minigraph clearly presents tasks and methods (some including metrics and materials), making it more informative for summarization purposes.\n\nConclusions and Future Work\n\nThis paper aims to provide an intelligent research copilot to assist in writing literature reviews based on given references. While recent LLMs excel at natural language understanding and generation, they struggle to explicitly model complex relationships between ideas from multiple papers. To address this challenge, we propose collaborative knowledge minigraph agents (CKMAs). The contributions of this work are threefold: (1) We propose scientific document-oriented knowledge minigraphs and, for the first time, equip LLMs with knowledge minigraphs for multiple scientific document summarization. (2) We are the first to develop a promptbased iterative algorithm to process a vast amount of literature and automatically construct knowledge minigraphs for multiple scientific document summarization. (3) We firstly introduce a mixture of experts’ mechanisms to attempt the organization of literature reviews with different logical paths on minigraphs and derive the best one via self-evaluation.\n\nWe conduct comparison experiments, ablation studies, and case studies. The results show the effectiveness of the proposed method. For future work, we plan to explore finetuning LLMs with the proposed CKMAs to better follow instructions and approximate human-written literature reviews in collected datasets. We also intend to investigate the possibility of generating full survey papers with multiple paragraphs, which involve more scientific documents and more complex relationships and require planning of the survey paper’s organization.\n\nTask Method Generic Metric Material Other Figure 4: Case study of knowledge graphs queried from Wikidata (top) and knowledge minigraph constructed by CKMAs (bottom) for the topic “image denoising”."
}